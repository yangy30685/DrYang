# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
   
   #定义一个名为allips的limit_req_zone用来存储session，大小是20M内存，
    #以$binary_remote_addr 为key,限制平均每秒的请求为10个，
    #1M能存储16000个状态，rete的值必须为整数，
    #如果限制两秒钟一个请求，可以设置成30r/m
    limit_req_zone $binary_remote_addr zone=allips:20m rate=30r/s;

    limit_req zone=allips burst=10 nodelay;
 
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    server {
        	listen       80 default_server;
        	listen       [::]:80 default_server;
		server_name  _;
	
	      	rewrite ^(.*)$ https://$host$1 permanent;


        	root         /usr/share/nginx/html;

        	# Load configuration files for the default server block.
        	include /etc/nginx/default.d/*.conf;

        	location / {
        	}

       		 error_page 404 /404.html;
           		 location = /40x.html {
        	}

     		 error_page 500 502 503 504 /50x.html;
           		 location = /50x.html {
        	}
   
       		# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
       		 location ~ \.php$ {
            		root           /usr/share/nginx/html;
            		fastcgi_pass   127.0.0.1:9000;
            		fastcgi_index  index.php;
            		fastcgi_param  SCRIPT_FILENAME   $document_root$fastcgi_script_name;
            		include        fastcgi_params;
           		}
       	}

server {
        listen 443;
        server_name yangspot.com;
  
       
	ssl on;
        ssl_certificate 1_yangspot.com_bundle.crt;
        ssl_certificate_key 2_yangspot.com.key;
        ssl_session_timeout 5m;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
        ssl_prefer_server_ciphers on;
        
        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
            include /etc/nginx/default.d/*.conf;
        }

        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
   
        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        location ~ \.php$ {
         root           /usr/share/nginx/html;
         fastcgi_pass   127.0.0.1:9000;
         fastcgi_index  index.php;
         fastcgi_param  SCRIPT_FILENAME   $document_root$fastcgi_script_name;
         include        fastcgi_params;
        }
         
    }



# Settings for a TLS enabled server.
#
#    server {
#        listen       443 ssl http2 default_server;
#        listen       [::]:443 ssl http2 default_server;
#        server_name  _;
#        root         /usr/share/nginx/html;
#
#        ssl_certificate "/etc/pki/nginx/server.crt";
#        ssl_certificate_key "/etc/pki/nginx/private/server.key";
#        ssl_session_cache shared:SSL:1m;
#        ssl_session_timeout  10m;
#        ssl_ciphers HIGH:!aNULL:!MD5;
#        ssl_prefer_server_ciphers on;
#
#        # Load configuration files for the default server block.
#        include /etc/nginx/default.d/*.conf;
#
#        location / {
#        }
#
#        error_page 404 /404.html;
#            location = /40x.html {
#        }
#
#        error_page 500 502 503 504 /50x.html;
#            location = /50x.html {
#        }
#    }

}



